initSidebarItems({"enum":[["ErrorKind","The kind of an error."]],"fn":[["find","If a manifest is specified, return that one, otherise perform a manifest search starting from the current directory. If a manifest is specified, return that one. If a path is specified, perform a manifest search starting from there. If nothing is specified, start searching from the current directory (`cwd`)."],["get_crate_name_from_github","Query crate name by accessing a github repo Cargo.toml"],["get_crate_name_from_gitlab","Query crate name by accessing a gitlab repo Cargo.toml"],["get_crate_name_from_path","Query crate name by accessing Cargo.toml in a local path"],["get_latest_dependency","Query latest version from a registry index"],["update_registry_index","update registry index for given project"]],"struct":[["CrateName","A crate specifier. This can be a plain name (e.g. `docopt`), a name and a versionreq (e.g. `docopt@^0.8`), a URL, or a path."],["Dependency","A dependency handled by Cargo"],["Error","The Error type."],["LocalManifest","A Cargo manifest that is available locally."],["Manifest","A Cargo manifest"]],"trait":[["ResultExt","Additional methods for `Result`, for easy interaction with this crate."]],"type":[["Result","Convenient wrapper around `std::Result`."]]});